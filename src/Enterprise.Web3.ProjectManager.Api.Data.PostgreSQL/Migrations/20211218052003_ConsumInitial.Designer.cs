// <auto-generated />
using System;
using Enterprise.Web3.ProjectManager.Api.Data.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Enterprise.Web3.ProjectManager.Api.Data.PostgreSql.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20211218052003_ConsumInitial")]
    partial class ConsumInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("ConsumerTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("consumer_type_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("Inn")
                        .HasColumnType("integer")
                        .HasColumnName("inn");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerTypeId");

                    b.ToTable("consumer");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.ConsumerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("consumer_type");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("integer")
                        .HasColumnName("max_points");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("skill_type_id");

                    b.HasKey("Id");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("skill");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.SkillType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("skill_type");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.Consumer", b =>
                {
                    b.HasOne("Enterprise.Web3.ProjectManager.Api.Core.Entities.ConsumerType", "ConsumerType")
                        .WithMany("Consumers")
                        .HasForeignKey("ConsumerTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ConsumerType");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.Skill", b =>
                {
                    b.HasOne("Enterprise.Web3.ProjectManager.Api.Core.Entities.SkillType", "SkillType")
                        .WithMany("Skills")
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.ConsumerType", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("Enterprise.Web3.ProjectManager.Api.Core.Entities.SkillType", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
